import telebot
from telebot import TeleBot
import random
import sqlite3
from parserc import Parser
import pymorphy2


morph = pymorphy2.MorphAnalyzer(lang='ru')
db = sqlite3.connect('users.db', check_same_thread=False)

emoji = ['üò°','üòç','üò¶','','','','','','','','','','','','']

cursor = db.cursor()

cursor.execute("CREATE TABLE IF NOT EXISTS users(chat_id integer primary key, name text, age integer, sex text)")

bot = TeleBot("5063426005:AAFy7JdUcpge9fl8HAXswO7RpIZ5QODiwsc")
@bot.message_handler(commands=['start'])
def hello_message(message):
    name = bot.send_message(message.chat.id,"–ü—Ä–∏–≤–µ—Ç–∏–∫,–∫–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")
    bot.register_next_step_handler(name,SetUserName)
    

def SetUserName(message):
    cursor.execute('INSERT OR REPLACE INTO users(chat_id, name, age, sex) VALUES(?,?,?,?)', (message.chat.id, message.text, None, None))
    db.commit()
    age = bot.send_message(message.chat.id, f'–Ø —Ç–µ–±—è –∑–∞–ø–æ–º–Ω–∏–ª–∞ {message.text}. –£–∫–∞–∂–∏ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç')
    bot.register_next_step_handler(age,SetUserAge)

    

def SetUserAge(message):
    cursor.execute(f'UPDATE users  SET age =? WHERE chat_id=?', (message.text, message.chat.id))
    db.commit()
    sex = bot.send_message(message.chat.id, f'—Ö–æ—Ä–æ—à–æ!,–£–∫–∞–∂–∏ —Å–≤–æ–π –ø–æ–ª')
    bot.register_next_step_handler(sex,SetUserSex)

def SetUserSex(message):
    cursor.execute(f'UPDATE users  SET sex =? WHERE chat_id=?', (message.text, message.chat.id))
    db.commit()
    bot.send_message(message.chat.id, f'–≤—Å—ë —Å–ø–∞—Å–∏–±–æ :)')



@bot.message_handler(content_types=['text'])
def message_handler(message):
    print(message)
    if message.text.lower() == '–ø–æ–∫–∞':
        bot.send_message(message.chat.id, '–ü–æ–∫–∞!')
    elif message.text.lower() == '—è —Ç–µ–±—è –ª—é–±–ª—é':
        bot.send_message(message.chat.id,random.choice(['—è —Ç–µ–±—è —Ç–æ–∂–µ','–Ω—è :)','–ø–∞—Å–∏–±–∫–∏']))
    elif message.text.lower() in ['–ø—Ä–∏–≤–µ—Ç–∏–∫','–ø—Ä–∏–≤–µ—Ç','—à–∞–ª–æ–º']:
        bot.send_message(message.chat.id, random.choice(['–ü–†–ò–í–ï–¢','–ü–†–ò–í–ï–¢–ò–ö','–•–ê–ô','–û–ù–ò–ß–ê–ù']))
    elif message.text.lower() in ['–∫–∞–∫ –¥–µ–ª–∞','–∫–∞–∫ –¥–µ–ª–∞?','–∫–∞–∫ –∂–∏–∑–Ω—å','–∫–∞–∫ –∂–∏–∑–Ω—å?']:
        msg = bot.send_message(message.chat.id,"–•–æ—Ä–æ—à–æ, –∞ —É —Ç–µ–±—è?")
        bot.register_next_step_handler(msg, dela_2)
    elif message.text.lower().startswith('—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —É—Ç—Ä–æ–º –≤'):
        city = message.text.lower()[20:]
        city = morph.parse(city)[0].normal_form
        parser = Parser(f'https://sinoptik.com.ru/–ø–æ–≥–æ–¥–∞-{city}')
        weather = parser.get_texts(container = 'div', c_class='table__temp', elements=8)
        bot.send_message(message.chat.id,f'–õ–æ–≤–∏ –±—Ä–∞—Ç–∏–∫ {weather[0]}')
    elif message.text.lower().startswith('—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –¥–Ω—ë–º –≤'):
        city = message.text.lower()[19:]
        city = morph.parse(city)[0].normal_form
        parser = Parser(f'https://sinoptik.com.ru/–ø–æ–≥–æ–¥–∞-{city}')
        weather = parser.get_texts(container = 'div', c_class='table__temp', elements=8)
        bot.send_message(message.chat.id,f'–ù–∞–¥–µ—é—Å—å —Ç—ã —Å–∫–æ—Ä–æ —Ä–∞–∑–±–µ—Ä—ë—à—å—Å—è —Å –¥–µ–ª–∞–º–∏{weather[2]}')
            
    elif message.text.lower().startswith('—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–µ—á–µ—Ä–æ–º –≤'):
        city = message.text.lower()[22:]
        city = morph.parse(city)[0].normal_form
        parser = Parser(f'https://sinoptik.com.ru/–ø–æ–≥–æ–¥–∞-{city}')
        weather = parser.get_texts(container = 'div', c_class='table__temp', elements=8)
        bot.send_message(message.chat.id,f'–í–æ–∑–≤—Ä–∞—â–∞–π—Å—è –ª—É—á—à–µ –ø–æ—Å–∫–æ—Ä–µ–µ {weather[4]}')
    elif message.text.lower().startswith('—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–æ—á—å—é –≤'):
        city = message.text.lower()[20:]
        city = morph.parse(city)[0].normal_form
        parser = Parser(f'https://sinoptik.com.ru/–ø–æ–≥–æ–¥–∞-{city}')
        weather = parser.get_texts(container = 'div', c_class='table__temp', elements=8)
        bot.send_message(message.chat.id,f'–õ—É—á—à–µ –ø–æ—Å–ø–∏ –∏ –Ω–∏–∫—É–¥–∞ –Ω–µ –∏–¥–∏ {weather[6]}')
    elif message.text.lower() in ['—Ö–æ—á–µ—à—å —à—É—Ç–∫—É','—Ö–æ—á–µ—à—å –ø—Ä–∏–∫–æ–ª','–≤–Ω–∏–º–∞–Ω–∏–µ –∞–Ω–µ–∫–¥–æ—Ç']:
        msg = bot.send_message(message.chat.id,'–û–û–û–û–û–û –î–ê–í–ê–ô')
        bot.register_next_step_handler(msg,joke)

@bot.message_handler(content_types=["sticker"])
def send_sticker(message):
    sticker_id = message
    
    if message.sticker.emoji == "üò§":
        msg=bot.send_message(message.chat.id,'—É–∑–±–∞–≥–æ–π—Å—è,—á—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å?')
        bot.register_next_step_handler(msg,dela_3)
    print(sticker_id.sticker.emoji)

def joke(message):
    if message != '':
        bot.send_message(message.chat.id,random.choice(['–ê–•–•–•–ê–•–ê–•','–°–º–µ—à–Ω–∞—è —à—É—Ç–∫–∞','—Ö–∏—Ö–∏—Ö—Ö–∏–∏—Ö']))
    else:
        return

def dela_2(message):
    if message.text.lower() in ['–Ω–æ—Ä–º','–æ—Ç–ª–∏—á–Ω–æ','—Ö–æ—Ä–æ—à–æ','–∑–∞–µ–±–∏—Å—å','–∞—Ö—É–µ–Ω–æ','—Ç–æ–ø','–ø–∏–∑–¥–∞—Ç–æ']:
        bot.send_message(message.chat.id,'–†–∞–¥–∞ –∑–∞ —Ç–µ–±—è :)')
    elif message.text.lower() in ['—É–∂–∞—Å–Ω–æ','–ø–ª–æ—Ö–æ','—Ö—É—ë–≤–æ','—Ç–∞–∫ —Å–µ–±–µ','–Ω–µ –æ—á–µ–Ω—å']:
        a=bot.send_message(message.chat.id,'–ë–ª–∏–Ω, –∞ —á—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å :(')
        bot.register_next_step_handler(a,dela_3)

def dela_3(message):
    if message.text.lower() in ['–Ω–µ —Ö–æ—á—É –æ–± —ç—Ç–æ–º –≥–æ–≤–æ—Ä–∏—Ç—å','–Ω–µ —Ö–æ—á—É —ç—Ç–æ –æ–±—Å—É–∂–¥–∞—Ç—å']:
        bot.send_message(message.chat.id,'–ù—É –ª–∞–¥–Ω–æ....')
    else:
        bot.send_message(message.chat.id,'–ù–∞–¥–µ—é—Å—å –≤—Å—ë –Ω–∞–ª–∞–¥–∏—Ç—Å—è')



print('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω')
bot.infinity_polling()